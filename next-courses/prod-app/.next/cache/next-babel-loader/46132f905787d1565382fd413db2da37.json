{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/primo.acho/dev/primo-acho/next-courses/prod-app/pages/blog/index.tsx\";\nimport React from 'react';\nimport { Pane, majorScale } from 'evergreen-ui';\nimport matter from 'gray-matter';\nimport path from 'path';\nimport fs from 'fs';\nimport Container from '../../components/container';\nimport HomeNav from '../../components/homeNav';\nimport PostPreview from '../../components/postPreview';\nimport { posts as postsFromCMS } from '../../content';\n\nconst Blog = ({\n  posts\n}) => {\n  return /*#__PURE__*/_jsxDEV(Pane, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(HomeNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Pane, {\n          marginY: majorScale(5),\n          children: /*#__PURE__*/_jsxDEV(PostPreview, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, post.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nBlog.defaultProps = {\n  posts: []\n};\nexport function getStaticProps() {\n  const cmsPosts = postsFromCMS.published.map(post => {\n    const {\n      data\n    } = matter(post);\n    return data;\n  });\n  const postsPath = path.join(process.cwd(), 'posts');\n  const filenames = fs.readdirSync(postsPath);\n  const fileposts = filenames.map(name => {\n    const fullPath = path.join(process.cwd(), 'posts', 'name');\n    const file = fs.readFileSync(name, 'utf-8');\n    const {\n      data\n    } = matter(file);\n    return data;\n  });\n  const posts = [...cmsPosts, ...fileposts];\n  return {\n    props: posts\n  };\n}\nexport default Blog;\n/**\n * Need to get the posts from the\n * fs and our CMS\n */","map":{"version":3,"sources":["/Users/primo.acho/dev/primo-acho/next-courses/prod-app/pages/blog/index.tsx"],"names":["React","Pane","majorScale","matter","path","fs","Container","HomeNav","PostPreview","posts","postsFromCMS","Blog","map","post","title","defaultProps","getStaticProps","cmsPosts","published","data","postsPath","join","process","cwd","filenames","readdirSync","fileposts","name","fullPath","file","readFileSync","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,cAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,KAAK,IAAIC,YAAlB,QAAsC,eAAtC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAe;AAC1B,sBACE,QAAC,IAAD;AAAA,4BACE;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE,QAAC,SAAD;AAAA,kBACGA,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAuB,UAAA,OAAO,EAAEX,UAAU,CAAC,CAAD,CAA1C;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,IAAI,EAAEW;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,WAAWA,IAAI,CAACC,KAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;AAmBAH,IAAI,CAACI,YAAL,GAAoB;AAClBN,EAAAA,KAAK,EAAE;AADW,CAApB;AAIA,OAAO,SAASO,cAAT,GAA2B;AAChC,QAAMC,QAAQ,GAAGP,YAAY,CAACQ,SAAb,CAAuBN,GAAvB,CAA2BC,IAAI,IAAG;AACjD,UAAM;AAAEM,MAAAA;AAAF,QAAWhB,MAAM,CAACU,IAAD,CAAvB;AACA,WAAOM,IAAP;AACD,GAHgB,CAAjB;AAIA,QAAMC,SAAS,GAAGhB,IAAI,CAACiB,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAwB,OAAxB,CAAlB;AACA,QAAMC,SAAS,GAAGnB,EAAE,CAACoB,WAAH,CAAeL,SAAf,CAAlB;AACA,QAAMM,SAAS,GAAGF,SAAS,CAACZ,GAAV,CAAce,IAAI,IAAG;AACrC,UAAMC,QAAQ,GAAGxB,IAAI,CAACiB,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,EAAkC,MAAlC,CAAjB;AACA,UAAMM,IAAI,GAAGxB,EAAE,CAACyB,YAAH,CAAgBH,IAAhB,EAAsB,OAAtB,CAAb;AACA,UAAM;AAAER,MAAAA;AAAF,QAAWhB,MAAM,CAAC0B,IAAD,CAAvB;AACA,WAAOV,IAAP;AACD,GALiB,CAAlB;AAOA,QAAMV,KAAK,GAAG,CAAC,GAAGQ,QAAJ,EAAc,GAAGS,SAAjB,CAAd;AACA,SAAO;AACLK,IAAAA,KAAK,EAAEtB;AADF,GAAP;AAGD;AAED,eAAeE,IAAf;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { Pane, majorScale } from 'evergreen-ui'\nimport matter from 'gray-matter'\nimport path from 'path'\nimport fs from 'fs'\nimport orderby from 'lodash.orderby'\nimport Container from '../../components/container'\nimport HomeNav from '../../components/homeNav'\nimport PostPreview from '../../components/postPreview'\nimport { posts as postsFromCMS } from '../../content'\n\nconst Blog = ({ posts }) => {\n  return (\n    <Pane>\n      <header>\n        <HomeNav />\n      </header>\n      <main>\n        <Container>\n          {posts.map((post) => (\n            <Pane key={post.title} marginY={majorScale(5)}>\n              <PostPreview post={post} />\n            </Pane>\n          ))}\n        </Container>\n      </main>\n    </Pane>\n  )\n}\n\nBlog.defaultProps = {\n  posts: [],\n}\n\nexport function getStaticProps( ) {\n  const cmsPosts = postsFromCMS.published.map(post=> {\n    const { data } = matter(post);\n    return data\n  })\n  const postsPath = path.join(process.cwd(),'posts')\n  const filenames = fs.readdirSync(postsPath);\n  const fileposts = filenames.map(name =>{\n    const fullPath = path.join(process.cwd(), 'posts', 'name')\n    const file = fs.readFileSync(name, 'utf-8')\n    const { data } = matter(file);\n    return data;\n  })\n\n  const posts = [...cmsPosts, ...fileposts]\n  return {\n    props: posts\n  }\n}\n\nexport default Blog\n\n/**\n * Need to get the posts from the\n * fs and our CMS\n */\n"]},"metadata":{},"sourceType":"module"}